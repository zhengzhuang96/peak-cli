#!/usr/bin/env node
"use strict";var e=require("commander"),r=require("tslib"),n=require("chalk"),t=require("figlet"),o=require("readline"),i=require("fs-extra"),a=require("inquirer"),c=require("path"),s=require("fs");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=u(n),l=u(c);const p=e=>console.log(e),f=require("ora"),v=require("download-git-repo"),m=(e,n)=>r.__awaiter(void 0,void 0,void 0,(function*(){return new Promise(((t,o)=>{let i;if("taro"===e)i="github:zhengzhuang96/taro-react#main";const a=f(`🚕 正在创建 ${e} 项目模版...\n`);a.start(),v(i,n,{clone:!0},(function(e){return r.__awaiter(this,void 0,void 0,(function*(){p(e?`Error: ${e}`:"Success"),e?(a.fail(`🚕 下载失败: ${e}`),t(!1)):(a.succeed("🚕 下载成功"),t(!0))}))}))}))})),y=require("cross-spawn"),g=require("chalk");var w="0.0.7";const h=()=>r.__awaiter(void 0,void 0,void 0,(function*(){(()=>{const e="\n".repeat(process.stdout.rows);console.log(e),o.cursorTo(process.stdout,0,0),o.clearScreenDown(process.stdout)})(),p(d.default.yellow(t.textSync("peak-cli",{horizontalLayout:"full"}))),p(`🗼 peak-cli v${w}`),p(""),p(d.default.green("peak-cli 即将创建一个新项目!")),p("需要帮助? 请在 https://github.com/zhengzhuang96/peak-cli 提交issue"),p("");const{project:e,description:n,typeProject:u,nodeInstall:f}=yield r.__awaiter(void 0,void 0,void 0,(function*(){const e=[{type:"input",name:"project",message:"请输入项目名称",validate:e=>r.__awaiter(void 0,void 0,void 0,(function*(){if(!e)return"请输入项目名称";const r=c.join(process.cwd(),e);return!i.existsSync(r)||`目标目录 ${d.default.cyan(r)} 已经存在，请换一个项目名！`}))},{type:"input",name:"description",message:"请输入项目介绍"},{type:"list",name:"nodeInstall",message:"使用那种方式构建项目?",default:"yarn",choices:[{name:"yarn",value:"yarn"},{name:"pnpm",value:"pnpm"},{name:"npm",value:"npm"}]},{type:"list",name:"typeProject",message:"项目类型",default:"vue",choices:[{name:"taro",value:"taro"}]}],{project:n,description:t,typeProject:o,nodeInstall:s}=yield a.prompt(e);return{project:n,description:t,typeProject:o,nodeInstall:s}}));yield m(u,e),yield((e,n)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=require(c.join(process.cwd(),e,"package.json"));return r.name=e,r.description=n,yield s.writeFileSync(c.join(process.cwd(),e,"package.json"),JSON.stringify(r,null,2)),!0})))(e,n),yield((e,r)=>new Promise(((n,t)=>{p(""),p(g.green("🐌 开始安装依赖项...")),p("");const o=l.default.join(process.cwd(),r);y(e,["install"],{cwd:o,stdio:"inherit"}).on("close",(function(e){p(""),p(g.green("🐌 安装依赖项完成!")),n()}))})))(f,e),((e,r,n)=>{const t=`${r}`;if("taro"===r){p(`\r\n成功创建了项目 ${d.default.green(n)}`),p(`\r\n  cd ${d.default.green(n)}`);const r="yarn"===e?"yarn":`${e} run`;p(`  ${d.default.green(`${r} dev:weapp`)}\r\n`)}})(f,u,e)})),j=new e.Command;j.version(w).command("create").description("创建新的项目").action((()=>{h()})),j.parse();
